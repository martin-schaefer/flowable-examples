<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns:flowable="http://flowable.org/bpmn"
  typeLanguage="http://www.w3.org/2001/XMLSchema"
  targetNamespace="http://www.flowable.org/processdef">

	<message id="invoiceResponseMessageRef" name="invoiceResponseMessage" />

	<process id="SubmitInvoiceProcess" name="Submit Invoice Process" isExecutable="true">

		<startEvent id="start" name="Start" />

		<sequenceFlow id="start-submitInvoiceTask" sourceRef="start" targetRef="submitInvoiceTask" />

		<serviceTask id="submitInvoiceTask" flowable:async="true" flowable:expression="#{invoiceService.submit(invoice)}">
			<extensionElements>
				<flowable:failedJobRetryTimeCycle>R5/PT1S</flowable:failedJobRetryTimeCycle>
			</extensionElements>
		</serviceTask>

		<sequenceFlow id="submitInvoiceTask-catchInvoiceResponseEvent" sourceRef="submitInvoiceTask" targetRef="catchInvoiceResponseEvent" />

		<intermediateCatchEvent id="catchInvoiceResponseEvent">
			<messageEventDefinition messageRef="invoiceResponseMessageRef" />
		</intermediateCatchEvent>

		<boundaryEvent id="invoiceResponseTimeout" cancelActivity="true" attachedToRef="catchInvoiceResponseEvent">
			<timerEventDefinition>
				<timeDuration>PT1S</timeDuration>
			</timerEventDefinition>
		</boundaryEvent>

		<sequenceFlow id="catchInvoiceResponseEvent-invoiceResponseGateway" sourceRef="catchInvoiceResponseEvent" targetRef="invoiceResponseGateway" />

		<exclusiveGateway id="invoiceResponseGateway" name="Invoice Response Gateway" />

			<sequenceFlow id="invoiceResponseGateway-saveInvoiceResponseTask" sourceRef="invoiceResponseGateway" targetRef="saveInvoiceResponseTask">
				<conditionExpression xsi:type="tFormalExpression">${variables:exists(invoiceResponse)}</conditionExpression>
			</sequenceFlow>
		
			<sequenceFlow id="invoiceResponseGateway-noInvoiceResponseTask" sourceRef="invoiceResponseGateway" targetRef="noInvoiceResponseTask" />


		<serviceTask id="saveInvoiceResponseTask" flowable:async="true" flowable:expression="#{invoiceService.receive(invoiceResponse)}" />

		<sequenceFlow id="saveInvoiceResponseTask-end" sourceRef="saveInvoiceResponseTask" targetRef="end" />

		<serviceTask id="noInvoiceResponseTask" flowable:async="true" flowable:expression="#{invoiceService.noInvoiceResponse(invoice.invoiceNumber)}" />

		<sequenceFlow id="noInvoiceResponseTask-end" sourceRef="noInvoiceResponseTask" targetRef="end" />
	
		<endEvent id="end" name="End" />

	</process>

</definitions>